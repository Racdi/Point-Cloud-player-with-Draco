cmake_minimum_required(VERSION 3.10)
project(LSQuicUnityPlugin)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Set vcpkg toolchain
set(CMAKE_TOOLCHAIN_FILE "C:/Users/a2655/Documents/vcpkg/scripts/buildsystems/vcpkg.cmake")
set(VCPKG_TARGET_TRIPLET "x64-windows-static")

# Important: Set static runtime
set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")

# Set output directories
if(WIN32)
    set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
    set(OUTPUT_DIR "${CMAKE_SOURCE_DIR}/../Assets/Plugins/x86_64")
else()
    set(OUTPUT_DIR "${CMAKE_SOURCE_DIR}/../Assets/Plugins/Linux/x86_64")
endif()

# Make sure the output directory exists
file(MAKE_DIRECTORY ${OUTPUT_DIR})

# Set output directory for the DLL
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${OUTPUT_DIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${OUTPUT_DIR})

# Add the library
add_library(LSQuicUnityPlugin SHARED
    src/LSQuicWrapper.cpp
)

# Include directories
target_include_directories(LSQuicUnityPlugin PRIVATE
    ${CMAKE_SOURCE_DIR}/include
    ${CMAKE_SOURCE_DIR}/include/compat
    ${CMAKE_SOURCE_DIR}/include/wincompat
    "C:/Users/a2655/Documents/boringssl/include"
    "C:/Users/a2655/Documents/vcpkg/installed/x64-windows-static/include"
)

# Link with libraries
if(WIN32)
    target_link_libraries(LSQuicUnityPlugin PRIVATE
        "C:/Users/a2655/Documents/lsquic/build/src/liblsquic/Debug/lsquic.lib"
        "C:/Users/a2655/Documents/boringssl/build/ssl/ssl.lib"
        "C:/Users/a2655/Documents/boringssl/build/crypto/crypto.lib"
        "C:/Users/a2655/Documents/vcpkg/installed/x64-windows-static/debug/lib/zlibd.lib"
        ws2_32.lib
    )
    
    # Add compile definitions for static linking
    target_compile_definitions(LSQuicUnityPlugin PRIVATE
        _CRT_SECURE_NO_WARNINGS
        ZLIB_WINAPI
    )
else()
    target_link_libraries(LSQuicUnityPlugin PRIVATE
        lsquic
        ssl
        crypto
        z
    )
endif()

# Set Debug configuration
set(CMAKE_BUILD_TYPE Debug)